@use 'map' as map;

@debug "TESTES DA FUNÇÃO BUILD-MAP-WITH-KEYS-AND-VALUES()......";

@debug 'Descrição: testando a função passando o mapa de chaves com a mesma quantidade de items do mapa de valores.';
$map-keys: ('chave 1', 'chave 2', 'chave 3');
$map-values: ('value 1', 'value 2', 'value 3');
$map: map.build-map-with-keys-and-values($map-keys, $map-values);
@debug $map;

@debug 'Descrição: testando a função passando mais chaves que valores.';
$map-keys: ('chave 1', 'chave 2', 'chave 3');
$map-values: ('value 1', 'value 2');
$map: map.build-map-with-keys-and-values($map-keys, $map-values);
@debug $map;

@debug 'Descrição: testando a função passando mais valores que chaves.';
$map-keys: ('chave 1', 'chave 2');
$map-values: ('value 1', 'value 2', 'value 3');
$map: map.build-map-with-keys-and-values($map-keys, $map-values);
@debug $map;


@debug "TESTES DA FUNÇÃO BUILD-MAP-SCOPE()......";

@debug 'Descrição: testando a criação de um mapa somente com chaves.';
$map-keys: ('chave 1', 'chave 2', 'chave 3');
$map-scope: map.build-map-scope($map-keys);
@debug $map-scope;

@debug 'Descrição: testando a criação de um mapa somente com valores.';
$map-values: ('value 1', 'value 2', 'value 3');
$map-scope: map.build-map-scope(null, $map-values);
@debug $map-scope;

//Retorna um erro.
@debug 'Descrição: passando ambos os parametros como invalidos.';
//$map-scope: map.build-map-scope((null, null, null), null);
@debug $map-scope;

@debug "TESTES DA FUNÇÃO IS-A-MAP()......";

@debug 'Descrição: teste passando um mapa valido como parametro.';
$valid-map: (1: true);
@debug map.is-a-map($valid-map);

@debug 'Descrição: teste passando um mapa invalido como parametro.';
$invalid-map: false;
@debug map.is-a-map($invalid-map);

@debug 'Descrição: Teste passando um mapa valido e um invalido.';
@debug map.is-a-map($valid-map, $invalid-map);

@debug "TESTES DA FUNÇÃO ADD-IN-MAP-VALUES()......";

@debug 'Descrição: Testando a função passando um prefixo para ser adicionado a todos os valores do mapa.';
$map: (1: 'valor 1', 2: 'valor 2', 3: 'valor 3');
$map-value-prefix: 'map value prefix ';
$map: map.add-in-map-values($map, $map-value-prefix);
@debug $map;

@debug 'Descrição: Testando a função passando um sufixo para ser adicionado a todos os valores do mapa.';
$map: (1: 'valor 1', 2: 'valor 2', 3: 'valor 3');
$map-value-sufix: ' map value sufix ';
$map: map.add-in-map-values($map, null, $map-value-sufix);
@debug $map;

@debug 'Descrição: Testando a função passando ambos os parametros para ser adicionado a todos os valores do mapa.';
$map: (1: 'valor 1', 2: 'valor 2', 3: 'valor 3');
$map-value-prefix: 'map value prefix ';
$map-value-sufix: ' map value sufix ';
$map: map.add-in-map-values($map, $map-value-prefix, $map-value-sufix);
@debug $map;

@debug "TESTES DA FUNÇÃO ADD-IN-MAP-KEYS()......";

@debug 'Descrição: Testando a função passando um prefixo para ser adicionado a todas as chaves do mapa.';
$map: (1: 'valor 1', 2: 'valor 2', 3: 'valor 3');
$map-key-prefix: 'map key prefix ';
$map: map.add-in-map-keys($map, $map-key-prefix);
@debug $map;

@debug 'Descrição: Testando a função passando um sufixo para ser adicionado a todos os valores do mapa.';
$map: (1: 'valor 1', 2: 'valor 2', 3: 'valor 3');
$map-key-sufix: ' map key sufix ';
$map: map.add-in-map-keys($map, null, $map-key-sufix);
@debug $map;

@debug 'Descrição: Testando a função passando ambos os parametros para ser adicionado a todos os valores do mapa.';
$map: (1: 'valor 1', 2: 'valor 2', 3: 'valor 3');
$map-key-prefix: 'map key prefix ';
$map-key-sufix: ' map key sufix ';
$map: map.add-in-map-keys($map, $map-key-prefix, $map-key-sufix);
@debug $map;

@debug "TESTES DA FUNÇÃO ADD-IN-MAP-KEYS-AND-VALUES()......";

@debug 'Descrição: Testando a função passando o prefixo e sufixo igual para valor e chave.';
$map: (1: 1, 2: 2, 3: 3);
$map-prefix: 'map prefix ';
$map-sufix: ' map sufix';
$map: map.add-in-map-keys-and-values($map, $map-prefix, $map-sufix);
@debug $map;

@debug 'Descrição: Testando a função passando o prefixo e sufixo individual para valor e chave.';
$map: (1: 1, 2: 2, 3: 3);
$map-prefix: ('key': 'map key prefix ', 'value': 'map value prefix ');
$map-sufix: ('key': ' map keys sufix', 'value': ' map key sufix');
$map: map.add-in-map-keys-and-values($map, $map-prefix, $map-sufix);
@debug $map;

@debug 'Descrição: Testando passar somente os prefixos.';
$map: (1: 1, 2: 2, 3: 3);
$map-prefix: ('key': 'map key prefix ', 'value': 'map value prefix ');
$map: map.add-in-map-keys-and-values($map, $map-prefix);
@debug $map;

@debug 'Descrição: Testando passar somente os sufixos.';
$map: (1: 1, 2: 2, 3: 3);
$map-sufix: ('key': ' map keys sufix', 'value': ' map value sufix');
$map: map.add-in-map-keys-and-values($map, null, $map-sufix);
@debug $map;

@debug 'Descrição: Testando passar somente o prefixo de chave e o sufixo de valor.';
$map: (1: 1, 2: 2, 3: 3);
$map-prefix: ('key': 'map key prefix ');
$map-sufix: ('value': ' map value sufix');
$map: map.add-in-map-keys-and-values($map, $map-prefix, $map-sufix);
@debug $map;

@debug "TESTES DA FUNÇÃO REPLACE-IN-MAP-VALUES()......";

@debug 'Descrição: Testando a substituição da marcação @ por um valor.';
$map: (1: '@ 1', 2: '@ 2', 3: '@ 3');
$search: '@';
$replace: 'value';
$map: map.replace-in-map-values($map, $search, $replace);
@debug $map;

@debug "TESTES DA FUNÇÃO REPLACE-IN-MAP-KEYS()......";

@debug 'Descrição: Testando a substituição da marcação @ por um valor.';
$map: ('@ 1': 1, '@ 2': 2, '@ 3': 3);
$search: '@';
$replace: 'key';
$map: map.replace-in-map-keys($map, $search, $replace);
@debug $map;

@debug "TESTES DA FUNÇÃO REPLACE-IN-MAP-KEYS-AND-VALUES()......";

@debug 'Descrição: Testando a substituição das marcações @ e # por um valor cada.';
$map: ('@ 1': '# 1', '@ 2': '# 2', '@ 3': '# 3');
$search: ('key': '@', 'value': '#');
$replace: ('key': 'key', 'value': 'value');
$map: map.replace-in-map-keys-and-values($map, $search, $replace);
@debug $map;

@debug "TESTES DA FUNÇÃO MERGE-MAPS()......";

@debug 'Descrição: Teste passando 3 mapas para serem mesclados em um.';
$map-1: (1: 'valor 1');
$map-2: (2: 'valor 2');
$map-3: (3: 'valor 3');
$merged-map: map.merge-maps($map-1, $map-2, $map-3);
@debug $merged-map;